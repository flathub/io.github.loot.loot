app-id: io.github.loot.loot
runtime: org.kde.Platform
runtime-version: '6.8'
sdk: org.kde.Sdk
command: LOOT
finish-args:
  - --device=dri
  - --share=ipc
  - --share=network
  - --socket=fallback-x11
  - --socket=wayland
  - --socket=pulseaudio
  # Steam package data.
  - --filesystem=xdg-data/Steam:ro
  # Steam package default library paths.
  - --filesystem=xdg-data/Steam/steamapps/common
  - --filesystem=xdg-data/Steam/steamapps/compatdata
  - --filesystem=~/.steam/steam/steamapps/common
  # Steam Flatpak data.
  - --filesystem=~/.var/app/com.valvesoftware.Steam/.local/share/Steam:ro
  # Steam Flatpak default library paths.
  - --filesystem=~/.var/app/com.valvesoftware.Steam/.local/share/Steam/steamapps/common
  - --filesystem=~/.var/app/com.valvesoftware.Steam/.local/share/Steam/steamapps/compatdata
  # Steam Deck SD card mount point parent path.
  - --filesystem=/run/media
  # Heroic Games Launcher package config.
  - --filesystem=xdg-config/heroic:ro
  # Heroic Games Launcher Flatpak config.
  - --filesystem=~/.var/app/com.heroicgameslauncher.hgl/config/heroic:ro
  # Heroic Games Launcher default games install path.
  - --filesystem=~/Games/Heroic
  # OpenMW's Ubuntu, Debian, Arch and OpenSUSE packages install its global
  # config files under /etc/openmw.
  - --filesystem=host-etc:ro
  # OpenMW's Ubuntu, Debian, Arch and OpenSUSE packages install its global data
  # and executable files under /usr.
  - --filesystem=host-os:ro
  # OpenMW user config for Ubuntu, Debian, Arch and OpenSUSE packages
  - --filesystem=xdg-config/openmw/openmw.cfg
  # OpenMW user data for Ubuntu, Debian, Arch and OpenSUSE packages
  - --filesystem=xdg-data/openmw:ro
  # OpenMW system Flatpak install path
  - --filesystem=/var/lib/flatpak/app/org.openmw.OpenMW:ro
  # OpenMW user Flatpak install path
  - --filesystem=~/.local/share/flatpak/app/org.openmw.OpenMW:ro
  # OpenMW Flatpak user config
  - --filesystem=~/.var/app/org.openmw.OpenMW/config/openmw/openmw.cfg
  # OpenMW Flatpak user data
  - --filesystem=~/.var/app/org.openmw.OpenMW/data/openmw:ro

sdk-extensions:
  - org.freedesktop.Sdk.Extension.rust-stable
modules:
  - name: Boost
    buildsystem: simple
    build-commands:
      - ./bootstrap.sh --prefix=/app
      - ./b2 link=static runtime-link=shared variant=release cxxflags="-std=c++17 -fPIC" --with-locale install
    sources:
      - type: archive
        url: https://archives.boost.io/release/1.87.0/source/boost_1_87_0.tar.bz2
        sha256: af57be25cb4c4f4b413ed692fe378affb4352ea50fbe294a11ef548f4d527d89

  - name: libtbb
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DTBB_TEST=OFF
    sources:
      - type: archive
        url: https://github.com/uxlfoundation/oneTBB/archive/refs/tags/v2022.0.0.tar.gz
        sha256: e8e89c9c345415b17b30a2db3095ba9d47647611662073f7fbf54ad48b7f3c2a

  - name: minizip-ng
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DMZ_ZLIB=ON
      - -DMZ_BZIP2=OFF
      - -DMZ_LZMA=OFF
      - -DMZ_ZSTD=OFF
      - -DMZ_FETCH_LIBS=OFF
      - -DMZ_PKCRYPT=OFF
      - -DMZ_WZAES=OFF
      - -DMZ_OPENSSL=OFF
      - -DMZ_LIBBSD=OFF
      - -DMZ_SIGNING=OFF
      - -DMZ_COMPRESS_ONLY=ON
    sources:
      - type: archive
        url: https://github.com/zlib-ng/minizip-ng/archive/refs/tags/4.0.8.tar.gz
        sha256: c3e9ceab2bec26cb72eba1cf46d0e2c7cad5d2fe3adf5df77e17d6bbfea4ec8f

  - name: tomlplusplus
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
    sources:
      - type: archive
        url: https://github.com/marzer/tomlplusplus/archive/v3.4.0.tar.gz
        sha256: 8517f65938a4faae9ccf8ebb36631a38c1cadfb5efa85d9a72e15b9e97d25155

  - name: fmt
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DFMT_DOC=OFF
      - -DFMT_TEST=OFF
      - -DCMAKE_POSITION_INDEPENDENT_CODE=ON
    sources:
      - type: archive
        url: https://github.com/fmtlib/fmt/archive/refs/tags/11.1.3.tar.gz
        sha256: 67cd23ea86ccc359693e2ce1ba8d1bab533c02d743c09b15f3131102d0c2fc1c

  - name: spdlog
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DSPDLOG_BUILD_EXAMPLE=OFF
      - -DSPDLOG_BUILD_PIC=ON
      - -DSPDLOG_FMT_EXTERNAL=ON
    sources:
      - type: archive
        url: https://github.com/gabime/spdlog/archive/v1.15.1.tar.gz
        sha256: 25c843860f039a1600f232c6eb9e01e6627f7d030a2ae5e232bdd3c9205d26cc

  - name: OGDF
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
    sources:
      - type: archive
        url: https://ogdf.uos.de/wp-content/uploads/2023/09/ogdf.v2023.09.zip
        sha256: a82298cfbcd9365d9650f3e5c09b49dc3e6cdf7ff80483133d02b9d371165436

  - name: yaml-cpp
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DYAML_BUILD_SHARED_LIBS=OFF
      - -DYAML_CPP_BUILD_CONTRIB=OFF
      - -DYAML_CPP_BUILD_TOOLS=OFF
      - -DYAML_CPP_BUILD_TESTS=OFF
    sources:
      - type: archive
        url: https://github.com/loot/yaml-cpp/archive/0.8.0+merge-key-support.2.tar.gz
        sha256: e91779044cd4025ec10ed31986031031ef22ebce90a64cc8f85e7c7e95a1abc6

  - name: cbindgen
    buildsystem: simple
    builddir: true
    build-options:
      append-path: /usr/lib/sdk/rust-stable/bin
      env:
        CARGO_HOME: /run/build/cbindgen/cargo
    build-commands:
      - cargo build --release --offline
      - install -D /run/build/cbindgen/target/release/cbindgen /app/bin/cbindgen
    sources:
      - type: archive
        url: https://github.com/mozilla/cbindgen/archive/0.26.0.tar.gz
        sha256: b45e1a64875b615702a86ac3084ef69ae32926241cd2b687a30c12474be15105
      # Generated using scripts/generate_manifests.sh
      - manifests/cbindgen.json

  - name: libloot
    buildsystem: cmake
    builddir: true
    build-options:
      append-path: /usr/lib/sdk/rust-stable/bin
      env:
        CARGO_HOME: /run/build/libloot/cargo
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DLIBLOOT_BUILD_TESTS=OFF
      - -DLIBLOOT_INSTALL_DOCS=OFF
      - -DESPLUGIN_URL=/run/build/libloot/6.1.1.tar.gz
      - -DLIBLOADORDER_URL=/run/build/libloot/18.2.2.tar.gz
      - -DLOOT_CONDITION_INTERPRETER_URL=/run/build/libloot/5.2.0.tar.gz
    sources:
      # Use the Git repository so that libloot's commit hash gets embedded in the build.
      - type: git
        url: https://github.com/loot/libloot.git
        tag: 0.25.3
        commit: db6d39bd93c9227a2ed92fba766c060f8b52db1e
      - type: file
        url: https://github.com/Ortham/esplugin/archive/refs/tags/6.1.1.tar.gz
        sha256: 8896859a6469e810c6e5430ed910fa8f8c31d39e032703b87ab090759663a240
      - type: file
        url: https://github.com/Ortham/libloadorder/archive/refs/tags/18.2.2.tar.gz
        sha256: 5e4c12e91180abbf201be70b3073fce791bdee2d70f33f89b35942446d3b5782
      - type: file
        url: https://github.com/loot/loot-condition-interpreter/archive/refs/tags/5.2.0.tar.gz
        sha256: 48db9d1022c65c6ea53b5febbbb8a45d089ac8e8773f8e14b069387fab80948d
      # Generated using scripts/generate_manifests.sh
      - manifests/esplugin.json
      - manifests/libloadorder.json
      - manifests/loot-condition-interpreter.json

  - name: LOOT
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DLOOT_BUILD_TESTS=OFF
      - -DVALVE_FILE_VDF_URL=/run/build/LOOT/v1.1.0.tar.gz
    build-commands:
      - install -D LOOT /app/bin/LOOT
      - install -D ../resources/linux/io.github.loot.loot.metainfo.xml /app/share/metainfo/io.github.loot.loot.metainfo.xml
      - install -D ../resources/linux/io.github.loot.loot.desktop /app/share/applications/io.github.loot.loot.desktop
      - install -D ../resources/icons/loot.svg /app/share/icons/hicolor/scalable/apps/io.github.loot.loot.svg
      - |
        cd ..
        python scripts/po_to_mo.py
      - |
        for path in ../resources/l10n/*/LC_MESSAGES/loot.mo
        do
          install -D "$path" "/app/share/locale/${path#../resources/l10n/}"
        done
      - sphinx-build -b html ../docs /app/share/doc/loot
    no-make-install: true
    modules:
      # Generated using scripts/generate_manifests.sh
      - manifests/docs.json
    sources:
      # Use the Git repository so that LOOT's commit hash gets embedded in the build.
      - type: git
        url: https://github.com/loot/loot.git
        tag: 0.25.0
      - type: file
        url: https://github.com/TinyTinni/ValveFileVDF/archive/refs/tags/v1.1.0.tar.gz
        sha256: 9149a6b01ca857f49f5660d608639acd579542bf862ad23e9cbf4c1e80ade55e
cleanup:
  - /bin/cbindgen
  - /include
  - /lib/cmake
  - /lib/*.a
  - /lib/pkgconfig
  - /lib/python3.10
  - /lib/x86_64-linux-gnu
  - /share/doc/libogdf
  - /share/doc/TBB
  - /share/tomlplusplus
